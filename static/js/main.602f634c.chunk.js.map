{"version":3,"sources":["actions/App.js","reducers/appReducer.js","reducers/index.js","store.js","components/NewTaskForm/index.jsx","components/TasksFilter/index.jsx","components/Task/index.jsx","components/TaskList/index.jsx","selectors/index.js","Pages/Main/index.jsx","App.js","index.js"],"names":["ADD_NEW_TODO","GET_CURRENT_KEY","HANDLE_COMPLETED","REMOVE_TODO","SET_EDIT_MODE","CANCEL_EDIT_MODE","ADD_EDITED_TODO","REMOVE_COMPLETED","SET_CURRENT_FILTER","cancelEditMode","idx","taskStatus","type","payload","initialState","todos","id","Date","now","text","time","status","currentFilter","currentKey","filters","rootReducer","combineReducers","app","state","trim","inputValue","concat","Math","random","getHours","getMinutes","i","updated","copy","splice","cloned","some","e","map","canceledCopy","index","editedText","editedStatus","edited","filter","store","createStore","NewTaskForm","valueHandler","dispatch","useDispatch","useState","value","setValue","className","onSubmit","preventDefault","placeholder","autoFocus","onChange","target","onInputChange","TasksFilter","tasksRemaining","onFilter","onRemoveCompleted","useSelector","current","onClick","data-filter","Task","onComplete","onRemove","currentlyEditing","setIsCurrentlyEditing","prevStatus","setPrevStatus","handleKey","keyCode","window","removeEventListener","useEffect","addEventListener","cn","completed","editing","checked","setEditMode","onEdit","onKeyPress","key","TaskList","tasks","handleCompleted","removeTodo","console","log","getAllTodos","getCurrentFilter","getActiveTodosLength","createSelector","todo","length","getTodosToRender","connect","todosToRender","dataset","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.602f634c.chunk.js","sourcesContent":["export const ADD_NEW_TODO = \"ADD_NEW_TODO\";\nexport const GET_CURRENT_KEY = \"GET_CURRENT_KEY\";\nexport const HANDLE_COMPLETED = \"HANDLE_COMPLETED\";\nexport const REMOVE_TODO = \"REMOVE_TODO\";\nexport const SET_EDIT_MODE = \"SET_EDIT_MODE\";\nexport const CANCEL_EDIT_MODE = \"CANCEL_EDIT_MODE\";\nexport const ADD_EDITED_TODO = \"ADD_EDITED_TODO\";\nexport const REMOVE_COMPLETED = \"REMOVE_COMPLETED\";\nexport const SET_CURRENT_FILTER = \"SET_CURRENT_FILTER\";\n\nexport const addTodo = (todo) => ({\n  type: ADD_NEW_TODO,\n  payload: todo,\n});\n\nexport const getCurrentKey = (key) => ({\n  type: GET_CURRENT_KEY,\n  payload: key,\n});\n\nexport const handleCompleted = (i, status) => ({\n  type: HANDLE_COMPLETED,\n  payload: { i, status },\n});\n\nexport const removeTodo = (i) => ({\n  type: REMOVE_TODO,\n  payload: i,\n});\n\nexport const addEditedTodo = (index, editedText, editedStatus) => ({\n  type: ADD_EDITED_TODO,\n  payload: { index, editedText, editedStatus },\n});\n\nexport const setEditMode = (i) => ({\n  type: SET_EDIT_MODE,\n  payload: i,\n});\n\nexport const cancelEditMode = (idx, taskStatus) => ({\n  type: CANCEL_EDIT_MODE,\n  payload: { idx, taskStatus },\n});\n\nexport const removeCompleted = (todos) => ({\n  type: REMOVE_COMPLETED,\n  payload: todos,\n});\n\nexport const setCurrentFilter = (active) => ({\n  type: SET_CURRENT_FILTER,\n  payload: active,\n});\n","import {\n  ADD_NEW_TODO,\n  GET_CURRENT_KEY,\n  HANDLE_COMPLETED,\n  REMOVE_TODO,\n  SET_EDIT_MODE,\n  CANCEL_EDIT_MODE,\n  ADD_EDITED_TODO,\n  REMOVE_COMPLETED,\n  SET_CURRENT_FILTER,\n} from \"actions/App\";\n\nconst initialState = {\n  todos: [\n    {\n      id: Date.now(),\n      text: \"Learn React\",\n      time: \"12:25\",\n      status: \"active\",\n    },\n    {\n      id: 1,\n      text: \"Learn Redux\",\n      time: \"12:27\",\n      status: \"active\",\n    },\n    {\n      id: 2,\n      text: \"Ask Serhio questions about JS\",\n      time: \"12:29\",\n      status: \"completed\",\n    },\n    {\n      id: 3,\n      text: \"Learn async code from code.mu\",\n      time: \"12:45\",\n      status: \"active\",\n    },\n  ],\n  currentFilter: \"all\",\n  currentKey: null,\n  filters: [\"all\", \"active\", \"completed\"],\n};\n\nconst appReducer = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case ADD_NEW_TODO:\n      if (payload.trim()) {\n        return {\n          ...state,\n          inputValue: \"\",\n          currentKey: null,\n          todos: state.todos.concat({\n            id: Math.random(),\n            text: payload,\n            time: new Date().getHours() + \" \" + new Date().getMinutes(),\n            status: \"active\",\n          }),\n        };\n      } else {\n        return {\n          ...state,\n        };\n      }\n    case GET_CURRENT_KEY:\n      return {\n        ...state,\n        currentKey: payload,\n      };\n    case HANDLE_COMPLETED: {\n      const { i, status } = payload;\n      const updated = [...state.todos];\n      updated[i].status = status === \"active\" ? \"completed\" : \"active\";\n      return {\n        ...state,\n        todos: updated,\n      };\n    }\n    case REMOVE_TODO: {\n      const { i } = payload;\n      const copy = [...state.todos];\n      copy.splice(i, 1);\n      return {\n        ...state,\n        todos: copy,\n      };\n    }\n    case SET_EDIT_MODE:\n      const cloned = [...state.todos];\n      if (cloned.some((e) => e.status === \"editing\")) {\n        cloned.map((e) => (e.status === \"editing\" ? (e.status = \"active\") : e));\n      }\n      cloned[payload].status = \"editing\";\n      return {\n        ...state,\n        todos: cloned,\n      };\n    case CANCEL_EDIT_MODE:\n      const { idx, taskStatus } = payload;\n      const canceledCopy = [...state.todos];\n      canceledCopy[idx].status = taskStatus;\n      return {\n        ...state,\n        todos: canceledCopy,\n      };\n    case ADD_EDITED_TODO:\n      const { index, editedText, editedStatus } = payload;\n      const edited = [...state.todos];\n      edited[index].text = editedText;\n      edited[index].status = editedStatus;\n      return {\n        ...state,\n        todos: edited,\n      };\n    case REMOVE_COMPLETED:\n      return {\n        ...state,\n        todos: payload.filter(({ status }) => status === \"active\"),\n      };\n    case SET_CURRENT_FILTER:\n      return {\n        ...state,\n        currentFilter: payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport { appReducer };\n","import { combineReducers } from \"redux\";\n\nimport { appReducer } from \"./appReducer\";\n\nconst rootReducer = combineReducers({\n  app: appReducer,\n});\n\nexport { rootReducer };\n","import { createStore } from \"redux\";\n// import { composeWithDevTools } from \"redux-devtools-extension/developmentOnly\";\n\nimport { rootReducer } from \"./reducers\";\n\nconst store = createStore(rootReducer);\n\nexport { store };\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { addTodo } from \"actions/App\";\n\nconst NewTaskForm = ({ valueHandler }) => {\n  const dispatch = useDispatch();\n  const [value, setValue] = useState(\"\");\n\n  const onInputChange = ({ target: { value } }) => setValue(value);\n\n  const onAdd = (e) => {\n    e.preventDefault();\n    dispatch(addTodo(value));\n    setValue(\"\");\n  };\n\n  return (\n    <header className=\"header\">\n      <h1>todos</h1>\n      <form onSubmit={onAdd}>\n        <input\n          value={value}\n          className=\"new-todo\"\n          placeholder=\"What needs to be done?\"\n          autoFocus\n          onChange={(e) => onInputChange(e)}\n        />\n      </form>\n    </header>\n  );\n};\n\nexport default NewTaskForm;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\n\nconst TasksFilter = ({\n  tasksRemaining,\n  onFilter,\n  onRemoveCompleted,\n  filter,\n}) => {\n  const filters = useSelector(({ app: { filters } }) => filters);\n\n  return (\n    <footer className=\"footer\">\n      <span className=\"todo-count\">\n        {tasksRemaining ? `Active ${tasksRemaining}` : \"All Done!\"}\n      </span>\n      <ul className=\"filters\">\n        {filters.map((current) => {\n          return (\n            <li key={current}>\n              <button\n                onClick={onFilter}\n                className={current === filter ? \"selected\" : \"\"}\n                data-filter={current}\n              >\n                {current}\n              </button>\n            </li>\n          );\n        })}\n      </ul>\n      <button onClick={onRemoveCompleted} className=\"clear-completed\">\n        Clear completed\n      </button>\n    </footer>\n  );\n};\n\nexport default TasksFilter;\n","import React, { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport cn from \"classnames\";\nimport {\n  addEditedTodo,\n  getCurrentKey,\n  setEditMode,\n  cancelEditMode,\n} from \"actions/App\";\n\nconst Task = ({ text, time, status, i, onComplete, onRemove }) => {\n  const dispatch = useDispatch();\n  const [value, setValue] = useState(text);\n  const [currentlyEditing, setIsCurrentlyEditing] = useState(false);\n  const [prevStatus, setPrevStatus] = useState(null);\n  const onEdit = ({ target: { value } }) => {\n    setValue(value);\n  };\n\n  const toggleEditMode = () => {\n    setPrevStatus(status);\n    setIsCurrentlyEditing(true);\n    dispatch(setEditMode(i));\n  };\n\n  const onEditSubmit = (e) => {\n    e.preventDefault();\n    setPrevStatus(status);\n    dispatch(addEditedTodo(i, value, prevStatus));\n    dispatch(cancelEditMode(i, prevStatus));\n    setIsCurrentlyEditing(false);\n  };\n\n  const handleKey = (e) => {\n    if (e.keyCode === 27) {\n      window.removeEventListener(\"keydown\", handleKey);\n      dispatch(cancelEditMode(i, prevStatus));\n      setIsCurrentlyEditing(false);\n      setValue(text);\n    }\n  };\n\n  useEffect(() => {\n    if (currentlyEditing) {\n      window.addEventListener(\"keydown\", handleKey);\n      return () => window.addEventListener(\"keydown\", handleKey);\n    }\n  });\n\n  return (\n    <li\n      className={cn({\n        completed: status === \"completed\",\n        editing: status === \"editing\",\n      })}\n    >\n      <div className=\"view\">\n        <input\n          onChange={() => onComplete(i, status)}\n          className=\"toggle\"\n          type=\"checkbox\"\n          checked={status === \"completed\"}\n        />\n        <label>\n          <span className=\"description\">{text}</span>\n          <span className=\"created\">{time}</span>\n        </label>\n        <button onClick={toggleEditMode} className=\"icon icon-edit\" />\n        <button onClick={() => onRemove(i)} className=\"icon icon-destroy\" />\n      </div>\n      {status === \"editing\" && (\n        <form onSubmit={onEditSubmit}>\n          <input\n            type=\"text\"\n            autoFocus\n            className=\"edit edit-mode\"\n            id={i}\n            onChange={(e) => onEdit(e)}\n            value={value}\n            onKeyPress={(e) => dispatch(getCurrentKey(e.key))}\n          />\n        </form>\n      )}\n    </li>\n  );\n};\n\nexport default Task;\n","import React from \"react\";\nimport Task from \"components/Task\";\nimport { handleCompleted, removeTodo } from \"actions/App\";\nimport { useDispatch } from \"react-redux\";\n\nconst TaskList = ({ tasks }) => {\n  const dispatch = useDispatch();\n\n  const onComplete = (i, status) => dispatch(handleCompleted(i, status));\n  const onRemove = (i) => dispatch(removeTodo(i));\n\n  console.log(\"rendering todos\", tasks);\n\n  return (\n    <ul className=\"todo-list\">\n      {tasks.map(({ id, text, time, status }, i) => (\n        <Task\n          key={id}\n          text={text}\n          time={time}\n          status={status}\n          i={i}\n          onComplete={onComplete}\n          onRemove={onRemove}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default TaskList;\n","import { createSelector } from \"reselect\";\n\nexport const getAllTodos = ({ app }) => app.todos;\n\nexport const getCurrentFilter = ({ app }) => app.currentFilter;\n\nexport const getActiveTodosLength = createSelector(\n  getAllTodos,\n  (todos) => todos.filter((todo) => todo.status !== \"completed\").length\n);\n\nexport const getTodosToRender = createSelector(\n  [getCurrentFilter, getAllTodos],\n  (filter, todos) => {\n    if (filter === \"completed\") {\n      return todos.filter(\n        (todo) => todo.status === \"completed\" || todo.status === \"editing\"\n      );\n    } else if (filter === \"active\") {\n      return todos.filter(\n        (todo) => todo.status === \"active\" || todo.status === \"editing\"\n      );\n    } else {\n      return todos;\n    }\n  }\n);\n\n// This example from official documentation does not work for some reason\n\n/*\nexport const getTodosToRender = createSelector(\n  [(getCurrentFilter, getAllTodos)],\n  (filter, todos) => {\n    switch (filter) {\n      case \"all\":\n        return todos;\n      case \"completed\":\n        return todos.filter((todo) => todo.status === \"completed\");\n      case \"active\":\n        return todos.filter((todo) => todo.status === \"active\");\n      default:\n        return todos;\n    }\n  }\n);\n*/\n","import NewTaskForm from \"components/NewTaskForm\";\nimport TasksFilter from \"components/TasksFilter\";\nimport TaskList from \"components/TaskList\";\nimport {\n  getCurrentFilter,\n  getActiveTodosLength,\n  getTodosToRender,\n} from \"selectors\";\nimport { useDispatch } from \"react-redux\";\nimport { setCurrentFilter, removeCompleted } from \"actions/App\";\nimport { connect } from \"react-redux\";\n\nconst Main = ({ filter, tasksRemaining, todosToRender }) => {\n  const dispatch = useDispatch();\n\n  const onFilter = ({ target }) => {\n    const filter = target.dataset.filter;\n    dispatch(setCurrentFilter(filter));\n  };\n\n  const onRemoveCompleted = () => {\n    dispatch(removeCompleted(todosToRender));\n  };\n  return (\n    <section className=\"todoapp\">\n      <NewTaskForm />\n      <TaskList tasks={todosToRender} />\n      <TasksFilter\n        tasksRemaining={tasksRemaining}\n        onFilter={onFilter}\n        onRemoveCompleted={onRemoveCompleted}\n        filter={filter}\n      />\n    </section>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    filter: getCurrentFilter(state),\n    tasksRemaining: getActiveTodosLength(state),\n    todosToRender: getTodosToRender(state),\n  };\n};\n\nexport default connect(mapStateToProps)(Main);\n","import React from \"react\";\nimport Main from \"./Pages/Main\";\nimport \"./App.css\";\n/*\nПеренести верстку TODO из примера в ваше React приложение.\n    Разбейте верстку на компоненты и отобразите на экране визуальную часть TODO. Вынесите в отдельные компоненты:\n    Task - одна задача\nTaskList - список задач\nNewTaskForm - форма для добавления\nFooter - футер с информацией и кнопками\nTasksFilter - фильтры в футере\nСделайте, чтобы все данные в Task передавались через props из верхнего компонента вашего приложения\nОсобенности:\n\n    Пока не реализовывайте отображение строки \"created 5 minutes ago\" - мы займемся этим потом\nВремя создания задачи должно быть классом Date\nДля отображения в качестве строки используйте эту функцию библиотеки date-fns\n*/\n\nconst App = () => <Main />;\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./store\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}